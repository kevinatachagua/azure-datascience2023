{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-upds-kuaf-dev-o7c"
		},
		"ADLSLinkedService_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ADLSLinkedService'"
		},
		"FileLinkedService_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'FileLinkedService'"
		},
		"ADLSLinkedService_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dlsupdskuafdevi5l.dfs.core.windows.net/"
		},
		"FileLinkedService_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "\\\\DESKTOP-RBFTL9T\\D$\\data"
		},
		"FileLinkedService_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "MicrosoftAccount\\KEVIN"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Copiar_TrabajoFinal2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_Geologia",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_source_trabajofinal",
								"type": "DatasetReference",
								"parameters": {
									"appname": "TrabajoFinal",
									"filename": "Geologia.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_target_trabajofinalparquet",
								"type": "DatasetReference",
								"parameters": {
									"filename": "r_geologia.parquet",
									"appname": "trabajofinal"
								}
							}
						]
					},
					{
						"name": "Copy_Geomecanica",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy_Geologia",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_source_trabajofinal",
								"type": "DatasetReference",
								"parameters": {
									"appname": "TrabajoFinal",
									"filename": "Geomecanica.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_target_trabajofinalparquet",
								"type": "DatasetReference",
								"parameters": {
									"filename": "r_geomecanica.parquet",
									"appname": "trabajofinal"
								}
							}
						]
					},
					{
						"name": "Copy_Oportunidades",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy_Geomecanica",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_source_trabajofinal",
								"type": "DatasetReference",
								"parameters": {
									"appname": "TrabajoFinal",
									"filename": "Oportunidades.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_target_trabajofinalparquet",
								"type": "DatasetReference",
								"parameters": {
									"filename": "r_oportunidades.parquet",
									"appname": "trabajofinal"
								}
							}
						]
					},
					{
						"name": "Copy_Planeamiento",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy_Oportunidades",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_source_trabajofinal",
								"type": "DatasetReference",
								"parameters": {
									"appname": "TrabajoFinal",
									"filename": "Planeamiento.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_target_trabajofinalparquet",
								"type": "DatasetReference",
								"parameters": {
									"filename": "r_planeamiento.parquet",
									"appname": "trabajofinal"
								}
							}
						]
					},
					{
						"name": "Copy_Retrasos_Operativos",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy_Planeamiento",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_source_trabajofinal",
								"type": "DatasetReference",
								"parameters": {
									"appname": "TrabajoFinal",
									"filename": "Retrasos_Operativos.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_target_trabajofinalparquet",
								"type": "DatasetReference",
								"parameters": {
									"filename": "r_retrasos_operativos.parquet",
									"appname": "trabajofinal"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "TrabajoFinal"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_source_trabajofinal')]",
				"[concat(variables('factoryId'), '/datasets/ds_target_trabajofinalparquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_TrabajoFinal')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data_Geologia",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_Geologia",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {
										"filename": "r_geologia.parquet",
										"appname": "trabajofinal"
									},
									"sink1": {
										"filename": "m_geologia.parquet",
										"appname": "trabajofinal"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Data_Geomecanica",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Data_Geologia",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_Geomecanica",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {
										"filename": "r_geomecanica.parquet",
										"appname": "trabajofinal"
									},
									"sink1": {
										"filename": "m_geomecanica.parquet",
										"appname": "trabajofinal"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Data_Oportunidades",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Data_Geomecanica",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_Oportunidades",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {
										"filename": "r_oportunidades.parquet",
										"appname": "trabajofinal"
									},
									"sink1": {
										"filename": "m_oportunidades.parquet",
										"appname": "trabajofinal"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Data_Retrasos_Operativos",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Data_Oportunidades",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_Retrasos_Operativos",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {
										"filename": "r_retrasos_operativos.parquet",
										"appname": "trabajofinal"
									},
									"sink1": {
										"filename": "m_retrasos_operativos.parquet",
										"appname": "trabajofinal"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Data_Planeamiento",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Data_Retrasos_Operativos",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_Planeamiento",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {
										"filename": "r_planeamiento.parquet",
										"appname": "trabajofinal"
									},
									"sink1": {
										"filename": "m_planeamiento.parquet",
										"appname": "trabajofinal"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "TrabajoFinal"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_Geologia')]",
				"[concat(variables('factoryId'), '/dataflows/DF_Geomecanica')]",
				"[concat(variables('factoryId'), '/dataflows/DF_Oportunidades')]",
				"[concat(variables('factoryId'), '/dataflows/DF_Retrasos_Operativos')]",
				"[concat(variables('factoryId'), '/dataflows/DF_Planeamiento')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ejecutar_CopiaMaster')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute _CopiaMaster",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "master_transaction_core",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "02_master_models"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/master_transaction_core')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ejecutar_CopiaRaw')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute_CopiaRaw",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "raw_know_core",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "01_raw_source"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/raw_know_core')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ejecutar_CopiaRaw_Master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute_CopiaRawTF",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Copiar_TrabajoFinal2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute_CopiaMasterTF",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_CopiaRawTF",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DF_TrabajoFinal",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "TrabajoFinal"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Copiar_TrabajoFinal2')]",
				"[concat(variables('factoryId'), '/pipelines/DF_TrabajoFinal')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/business_student_overview')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Demo",
						"description": "Demo",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "demo",
							"value": "demo"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"demo": {
						"type": "String"
					}
				},
				"folder": {
					"name": "03_business_reports"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-14T00:52:17Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/master_party_core')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DF Users",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"RawUsers": {
										"filename": "users.parquet",
										"appname": "sharedknow",
										"objectname": "users"
									},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"demo": {
						"type": "String"
					}
				},
				"folder": {
					"name": "02_master_models"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-14T00:52:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/master_transaction_core')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DF_Badges",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DataFlow_Badges",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Badges": {
										"filename": "badges.parquet",
										"appname": "sharedknow",
										"objectname": "badges"
									},
									"sink2": {
										"filename": "m_badges.parquet",
										"appname": "m_sharedknow",
										"objectname": "m_badges"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_Comments",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DF_Badges",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DataFlow_Comments",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Comments": {
										"filename": "comments.parquet",
										"appname": "sharedknow",
										"objectname": "comments"
									},
									"sink2": {
										"filename": "m_comments.parquet",
										"appname": "m_sharedknow",
										"objectname": "m_comments"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_Linktypes",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DF_Comments",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DataFlow_Linktypes",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Linktypes": {
										"filename": "linktypes.parquet",
										"appname": "sharedknow",
										"objectname": "linktypes"
									},
									"sink2": {
										"filename": "m_linktypes.parquet",
										"appname": "m_sharedknow",
										"objectname": "m_linktypes"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_Postlinks",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DF_Linktypes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DataFlow_Postlinks",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Postlinks": {
										"filename": "postlinks.parquet",
										"appname": "sharedknow",
										"objectname": "postlinks"
									},
									"sink2": {
										"filename": "m_postlinks.parquet",
										"appname": "m_sharedknow",
										"objectname": "m_postlinks"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_Posts1",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DF_Postlinks",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DataFlow_Posts1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Posts1": {
										"filename": "2008-01-01/posts_200801.parquet",
										"appname": "sharedknow",
										"objectname": "posts"
									},
									"sink2": {
										"filename": "m_2008-01-01/m_posts_200801.parquet",
										"appname": "m_sharedknow",
										"objectname": "m_posts"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_Posts2",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DF_Posts1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DataFlow_Posts2",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Posts2": {
										"filename": "2009-01-01/posts_200901.parquet",
										"appname": "sharedknow",
										"objectname": "posts"
									},
									"sink2": {
										"filename": "m_2009-01-01/m_posts_200901.parquet",
										"appname": "m_sharedknow",
										"objectname": "m_posts"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_Posttypes",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DF_Posts2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DataFlow_Posttypes",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Posttypes": {
										"filename": "posttypes.parquet",
										"appname": "sharedknow",
										"objectname": "posttypes"
									},
									"sink2": {
										"filename": "posttypes.parquet",
										"appname": "m_sharedknow",
										"objectname": "m_posttypes"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_Users",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DF_Posttypes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DataFlow_Users",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Users": {
										"filename": "users.parquet",
										"appname": "sharedknow",
										"objectname": "users"
									},
									"sink2": {
										"filename": "users.parquet",
										"appname": "m_sharedknow",
										"objectname": "m_users"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_Votes",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DF_Users",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DataFlow_Votes",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Votes": {
										"filename": "votes.parquet",
										"appname": "sharedknow",
										"objectname": "votes"
									},
									"sink2": {
										"filename": "votes.parquet",
										"appname": "m_sharedknow",
										"objectname": "m_votes"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DF_Votetypes",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DF_Votes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DataFlow_Votetypes",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Votetypes": {
										"filename": "votetypes.parquet",
										"appname": "sharedknow",
										"objectname": "votetypes"
									},
									"sink2": {
										"filename": "votetypes.parquet",
										"appname": "m_sharedknow",
										"objectname": "m_votetypes"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"demo": {
						"type": "String"
					}
				},
				"folder": {
					"name": "02_master_models"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-14T00:52:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DataFlow_Badges')]",
				"[concat(variables('factoryId'), '/dataflows/DataFlow_Comments')]",
				"[concat(variables('factoryId'), '/dataflows/DataFlow_Linktypes')]",
				"[concat(variables('factoryId'), '/dataflows/DataFlow_Postlinks')]",
				"[concat(variables('factoryId'), '/dataflows/DataFlow_Posts1')]",
				"[concat(variables('factoryId'), '/dataflows/DataFlow_Posts2')]",
				"[concat(variables('factoryId'), '/dataflows/DataFlow_Posttypes')]",
				"[concat(variables('factoryId'), '/dataflows/DataFlow_Users')]",
				"[concat(variables('factoryId'), '/dataflows/DataFlow_Votes')]",
				"[concat(variables('factoryId'), '/dataflows/DataFlow_Votetypes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/raw_ga4_core')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Demo",
						"description": "Demo",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "demo",
							"value": "demo"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"demo": {
						"type": "String"
					}
				},
				"folder": {
					"name": "01_raw_source"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-14T00:52:17Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/raw_know_core')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_Users",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_source_csv",
								"type": "DatasetReference",
								"parameters": {
									"filename": "sk_users.csv",
									"appname": "sharedknow",
									"objectname": "users"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_target_parquet",
								"type": "DatasetReference",
								"parameters": {
									"filename": "users.parquet",
									"appname": "sharedknow",
									"objectname": "users"
								}
							}
						]
					},
					{
						"name": "Copy_Badges",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy_Comments",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_source_csv",
								"type": "DatasetReference",
								"parameters": {
									"filename": "sk_badges.csv",
									"appname": "sharedknow",
									"objectname": "badges"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_target_parquet",
								"type": "DatasetReference",
								"parameters": {
									"filename": "badges.parquet",
									"appname": "sharedknow",
									"objectname": "badges"
								}
							}
						]
					},
					{
						"name": "Copy_Comments",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy_Users",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_source_csv",
								"type": "DatasetReference",
								"parameters": {
									"filename": "sk_comments.csv",
									"appname": "sharedknow",
									"objectname": "comments"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_target_parquet",
								"type": "DatasetReference",
								"parameters": {
									"filename": "comments.parquet",
									"appname": "sharedknow",
									"objectname": "comments"
								}
							}
						]
					},
					{
						"name": "Copy_Linktypes",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy_Badges",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_source_csv",
								"type": "DatasetReference",
								"parameters": {
									"filename": "sk_linktypes.csv",
									"appname": "sharedknow",
									"objectname": "linktypes"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_target_parquet",
								"type": "DatasetReference",
								"parameters": {
									"filename": "linktypes.parquet",
									"appname": "sharedknow",
									"objectname": "linktypes"
								}
							}
						]
					},
					{
						"name": "Copy_Postlinks",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy_Linktypes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_source_csv",
								"type": "DatasetReference",
								"parameters": {
									"filename": "sk_postlinks.csv",
									"appname": "sharedknow",
									"objectname": "postlinks"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_target_parquet",
								"type": "DatasetReference",
								"parameters": {
									"filename": "postlinks.parquet",
									"appname": "sharedknow",
									"objectname": "postlinks"
								}
							}
						]
					},
					{
						"name": "Copy_Posts1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy_Postlinks",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_source_csv",
								"type": "DatasetReference",
								"parameters": {
									"filename": "2008-01-01\\sk_posts_200801.csv",
									"appname": "sharedknow",
									"objectname": "posts"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_target_parquet",
								"type": "DatasetReference",
								"parameters": {
									"filename": "2008-01-01\\posts_200801.parquet",
									"appname": "sharedknow",
									"objectname": "posts"
								}
							}
						]
					},
					{
						"name": "Copy_Posts2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy_Posts1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_source_csv",
								"type": "DatasetReference",
								"parameters": {
									"filename": "2009-01-01\\sk_posts_200901.csv",
									"appname": "sharedknow",
									"objectname": "posts"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_target_parquet",
								"type": "DatasetReference",
								"parameters": {
									"filename": "2009-01-01\\posts_200901.parquet",
									"appname": "sharedknow",
									"objectname": "posts"
								}
							}
						]
					},
					{
						"name": "Copy_Posttypes",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy_Posts2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_source_csv",
								"type": "DatasetReference",
								"parameters": {
									"filename": "sk_posttypes.csv",
									"appname": "sharedknow",
									"objectname": "posttypes"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_target_parquet",
								"type": "DatasetReference",
								"parameters": {
									"filename": "posttypes.parquet",
									"appname": "sharedknow",
									"objectname": "posttypes"
								}
							}
						]
					},
					{
						"name": "Copy_Votes",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy_Posttypes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_source_csv",
								"type": "DatasetReference",
								"parameters": {
									"filename": "sk_votes.csv",
									"appname": "sharedknow",
									"objectname": "votes"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_target_parquet",
								"type": "DatasetReference",
								"parameters": {
									"filename": "votes.parquet",
									"appname": "sharedknow",
									"objectname": "votes"
								}
							}
						]
					},
					{
						"name": "Copy_Votetypes",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy_Votes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_source_csv",
								"type": "DatasetReference",
								"parameters": {
									"filename": "sk_votetypes.csv",
									"appname": "sharedknow",
									"objectname": "votetypes"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_target_parquet",
								"type": "DatasetReference",
								"parameters": {
									"filename": "votetypes.parquet",
									"appname": "sharedknow",
									"objectname": "votetypes"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"demo": {
						"type": "String"
					}
				},
				"folder": {
					"name": "01_raw_source"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-14T00:52:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_source_csv')]",
				"[concat(variables('factoryId'), '/datasets/ds_target_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_master_source_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string",
						"defaultValue": "m_comments1.parquet"
					},
					"appname": {
						"type": "string",
						"defaultValue": "m_sharedknow"
					},
					"objectname": {
						"type": "string",
						"defaultValue": "m_comments"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(dataset().appname,'/',dataset().objectname,'/',dataset().filename)",
							"type": "Expression"
						},
						"folderPath": "data",
						"fileSystem": "master"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_master_trabajofinalparquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					},
					"appname": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().appname",
							"type": "Expression"
						},
						"fileSystem": "master"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "Id",
						"type": "INT32"
					},
					{
						"name": "Name",
						"type": "UTF8"
					},
					{
						"name": "UserId",
						"type": "INT32"
					},
					{
						"name": "Date",
						"type": "DATE"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_source_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FileLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					},
					"appname": {
						"type": "string"
					},
					"objectname": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": {
							"value": "@concat(dataset().objectname,'/',dataset().filename)",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().appname",
							"type": "Expression"
						}
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FileLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_source_trabajofinal')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FileLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"appname": {
						"type": "string",
						"defaultValue": "TrabajoFinal"
					},
					"filename": {
						"type": "string",
						"defaultValue": "Geologia2.csv"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().appname",
							"type": "Expression"
						}
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "\"Id\"|\"Name\"|\"UserId\"|\"Date\"",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FileLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_target_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string",
						"defaultValue": "badges.parquet"
					},
					"appname": {
						"type": "string",
						"defaultValue": "sharedknow"
					},
					"objectname": {
						"type": "string",
						"defaultValue": "badges"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(dataset().appname,'/',dataset().objectname,'/',dataset().filename)",
							"type": "Expression"
						},
						"folderPath": "data",
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_target_trabajofinalparquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					},
					"appname": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().appname",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "Id",
						"type": "UTF8"
					},
					{
						"name": "Name",
						"type": "UTF8"
					},
					{
						"name": "UserId",
						"type": "UTF8"
					},
					{
						"name": "Date",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLSLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ADLSLinkedService_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ADLSLinkedService_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FileLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('FileLinkedService_properties_typeProperties_host')]",
					"userId": "[parameters('FileLinkedService_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('FileLinkedService_password')]"
					}
				},
				"connectVia": {
					"referenceName": "IRKUAFLocal01",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/IRKUAFLocal01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IRKUAFLocal01')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_Geologia')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_target_trabajofinalparquet",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_master_trabajofinalparquet",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Estimacion as string,",
						"          Estatus as string,",
						"          Nombre_de_Estructura as string,",
						"          Full_Year_Budget as string,",
						"          Budget_YTD_April as string,",
						"          Actual_YTD_April as string,",
						"          Detalle as string,",
						"          Observacion as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> source1",
						"source1 derive(Estimacion = toString(Estimacion),",
						"          Estatus = toString(Estatus),",
						"          Nombre_de_Estructura = toString(Nombre_de_Estructura),",
						"          Full_Year_Budget = toDouble(Full_Year_Budget),",
						"          Budget_YTD_April = toDouble(Budget_YTD_April),",
						"          Actual_YTD_April = toDouble(Actual_YTD_April),",
						"          Detalle = toString(Detalle),",
						"          Observacion = toString(Observacion),",
						"          ActualVSFullYearBudget = toDouble(Actual_YTD_April)-toDouble(Full_Year_Budget),",
						"          ActualVSBudgetApril = toDouble(Actual_YTD_April)-toDouble(Budget_YTD_April)) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Id as integer,",
						"          Name as string,",
						"          UserId as integer,",
						"          Date as date",
						"     ),",
						"     format: 'parquet',",
						"     filePattern:'m_geologia[n].parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_target_trabajofinalparquet')]",
				"[concat(variables('factoryId'), '/datasets/ds_master_trabajofinalparquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_Geomecanica')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_target_trabajofinalparquet",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_master_trabajofinalparquet",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Estimacion as string,",
						"          Estatus as string,",
						"          Nombre_de_Estructura as string,",
						"          Full_Year_Budget as string,",
						"          Budget_YTD_April as string,",
						"          Actual_YTD_April as string,",
						"          Detalle as string,",
						"          Observacion as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> source1",
						"source1 derive(Estimacion = toString(Estimacion),",
						"          Estatus = toString(Estatus),",
						"          Nombre_de_Estructura = toString(Nombre_de_Estructura),",
						"          Full_Year_Budget = toDouble(Full_Year_Budget),",
						"          Budget_YTD_April = toDouble(Budget_YTD_April),",
						"          Actual_YTD_April = toDouble(Actual_YTD_April),",
						"          Detalle = toString(Detalle),",
						"          Observacion = toString(Observacion),",
						"          ActualVSFullYearBudget = toDouble(Actual_YTD_April)-toDouble(Full_Year_Budget),",
						"          ActualVSBudgetApril = toDouble(Actual_YTD_April)-toDouble(Budget_YTD_April)) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Id as integer,",
						"          Name as string,",
						"          UserId as integer,",
						"          Date as date",
						"     ),",
						"     format: 'parquet',",
						"     filePattern:'m_geomecanica[n].parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_target_trabajofinalparquet')]",
				"[concat(variables('factoryId'), '/datasets/ds_master_trabajofinalparquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_Oportunidades')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_target_trabajofinalparquet",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_master_trabajofinalparquet",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Estimacion as string,",
						"          Estatus as string,",
						"          Nombre_de_Estructura as string,",
						"          Full_Year_Budget as string,",
						"          Budget_YTD_April as string,",
						"          Actual_YTD_April as string,",
						"          Detalle as string,",
						"          Observacion as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> source1",
						"source1 derive(Estimacion = toString(Estimacion),",
						"          Estatus = toString(Estatus),",
						"          Nombre_de_Estructura = toString(Nombre_de_Estructura),",
						"          Full_Year_Budget = toDouble(Full_Year_Budget),",
						"          Budget_YTD_April = toDouble(Budget_YTD_April),",
						"          Actual_YTD_April = toDouble(Actual_YTD_April),",
						"          Detalle = toString(Detalle),",
						"          Observacion = toString(Observacion),",
						"          ActualVSFullYearBudget = toDouble(Actual_YTD_April)-toDouble(Full_Year_Budget),",
						"          ActualVSBudgetApril = toDouble(Actual_YTD_April)-toDouble(Budget_YTD_April)) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Id as integer,",
						"          Name as string,",
						"          UserId as integer,",
						"          Date as date",
						"     ),",
						"     format: 'parquet',",
						"     filePattern:'m_oportunidades[n].parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_target_trabajofinalparquet')]",
				"[concat(variables('factoryId'), '/datasets/ds_master_trabajofinalparquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_Planeamiento')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_target_trabajofinalparquet",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_master_trabajofinalparquet",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Estimacion as string,",
						"          Estatus as string,",
						"          Nombre_de_Estructura as string,",
						"          Full_Year_Budget as string,",
						"          Budget_YTD_April as string,",
						"          Actual_YTD_April as string,",
						"          Detalle as string,",
						"          Observacion as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> source1",
						"source1 derive(Estimacion = toString(Estimacion),",
						"          Estatus = toString(Estatus),",
						"          Nombre_de_Estructura = toString(Nombre_de_Estructura),",
						"          Full_Year_Budget = toDouble(Full_Year_Budget),",
						"          Budget_YTD_April = toDouble(Budget_YTD_April),",
						"          Actual_YTD_April = toDouble(Actual_YTD_April),",
						"          Detalle = toString(Detalle),",
						"          Observacion = toString(Observacion),",
						"          ActualVSFullYearBudget = toDouble(Actual_YTD_April)-toDouble(Full_Year_Budget),",
						"          ActualVSBudgetApril = toDouble(Actual_YTD_April)-toDouble(Budget_YTD_April)) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Id as integer,",
						"          Name as string,",
						"          UserId as integer,",
						"          Date as date",
						"     ),",
						"     format: 'parquet',",
						"     filePattern:'m_planeamiento[n].parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_target_trabajofinalparquet')]",
				"[concat(variables('factoryId'), '/datasets/ds_master_trabajofinalparquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_Retrasos_Operativos')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_target_trabajofinalparquet",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_master_trabajofinalparquet",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Estimacion as string,",
						"          Estatus as string,",
						"          Nombre_de_Estructura as string,",
						"          Full_Year_Budget as string,",
						"          Budget_YTD_April as string,",
						"          Actual_YTD_April as string,",
						"          Detalle as string,",
						"          Observacion as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> source1",
						"source1 derive(Estimacion = toString(Estimacion),",
						"          Estatus = toString(Estatus),",
						"          Nombre_de_Estructura = toString(Nombre_de_Estructura),",
						"          Full_Year_Budget = toDouble(Full_Year_Budget),",
						"          Budget_YTD_April = toDouble(Budget_YTD_April),",
						"          Actual_YTD_April = toDouble(Actual_YTD_April),",
						"          Detalle = toString(Detalle),",
						"          Observacion = toString(Observacion),",
						"          ActualVSFullYearBudget = toDouble(Actual_YTD_April)-toDouble(Full_Year_Budget),",
						"          ActualVSBudgetApril = toDouble(Actual_YTD_April)-toDouble(Budget_YTD_April)) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Id as integer,",
						"          Name as string,",
						"          UserId as integer,",
						"          Date as date",
						"     ),",
						"     format: 'parquet',",
						"     filePattern:'m_retrasos_operativos[n].parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_target_trabajofinalparquet')]",
				"[concat(variables('factoryId'), '/datasets/ds_master_trabajofinalparquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlow_Badges')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_target_parquet",
								"type": "DatasetReference"
							},
							"name": "Badges"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_master_source_parquet",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Id as string,",
						"          Name as string,",
						"          UserId as string,",
						"          Date as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> Badges",
						"Badges derive(Id = toInteger(Id),",
						"          UserId = toInteger(UserId),",
						"          Name = toString(Name),",
						"          Date = toDate(Date, 'yyyy-MM-dd HH:mm:ss')) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     filePattern:'m_badges.parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink2"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_target_parquet')]",
				"[concat(variables('factoryId'), '/datasets/ds_master_source_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlow_Comments')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_target_parquet",
								"type": "DatasetReference"
							},
							"name": "Comments"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_master_source_parquet",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Id as string,",
						"          CreationDate as string,",
						"          PostId as string,",
						"          Score as string,",
						"          UserId as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> Comments",
						"Comments derive(Id = toInteger(Id),",
						"          CreationDate = toDate(CreationDate, 'yyyy-MM-dd HH:mm:ss'),",
						"          PostId = toInteger(PostId),",
						"          Score = toInteger(Score),",
						"          UserId = toInteger(UserId)) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     filePattern:'m_comments.parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink2"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_target_parquet')]",
				"[concat(variables('factoryId'), '/datasets/ds_master_source_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlow_Linktypes')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_target_parquet",
								"type": "DatasetReference"
							},
							"name": "Linktypes"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_master_source_parquet",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Id as string,",
						"          Type as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> Linktypes",
						"Linktypes derive(Id = toInteger(Id),",
						"          Type = toString(Type)) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     filePattern:'m_linktypes.parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink2"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_target_parquet')]",
				"[concat(variables('factoryId'), '/datasets/ds_master_source_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlow_Postlinks')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_target_parquet",
								"type": "DatasetReference"
							},
							"name": "Postlinks"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_master_source_parquet",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Id as string,",
						"          CreationDate as string,",
						"          PostId as string,",
						"          RelatedPostId as string,",
						"          LinkTypeId as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> Postlinks",
						"Postlinks derive(Id = toInteger(Id),",
						"          CreationDate = toDate(CreationDate, 'yyyy-MM-dd HH:mm:ss'),",
						"          PostId = toInteger(PostId),",
						"          RelatedPostId = toInteger(RelatedPostId),",
						"          LinkTypeId = toInteger(LinkTypeId)) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     filePattern:'m_postlinks.parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink2"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_target_parquet')]",
				"[concat(variables('factoryId'), '/datasets/ds_master_source_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlow_Posts1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_target_parquet",
								"type": "DatasetReference"
							},
							"name": "Posts1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_master_source_parquet",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Id as string,",
						"          AcceptedAnswerId as string,",
						"          AnswerCount as string,",
						"          ClosedDate as string,",
						"          CommentCount as string,",
						"          CommunityOwnedDate as string,",
						"          CreationDate as string,",
						"          FavoriteCount as string,",
						"          LastActivityDate as string,",
						"          LastEditDate as string,",
						"          LastEditorUserId as string,",
						"          OwnerUserId as string,",
						"          ParentId as string,",
						"          PostTypeId as string,",
						"          Score as string,",
						"          Tags as string,",
						"          ViewCount as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> Posts1",
						"Posts1 derive(Id = toInteger(Id),",
						"          AcceptedAnswerId = toInteger(AcceptedAnswerId),",
						"          AnswerCount = toInteger(AnswerCount),",
						"          ClosedDate = toDate(ClosedDate, 'yyyy-MM-dd HH:mm:ss'),",
						"          CommentCount = toInteger(CommentCount),",
						"          CommunityOwnedDate = toDate(CommunityOwnedDate, 'yyyy-MM-dd HH:mm:ss'),",
						"          CreationDate = toDate(CreationDate, 'yyyy-MM-dd HH:mm:ss'),",
						"          FavoriteCount = toInteger(FavoriteCount),",
						"          LastActivityDate = toDate(LastActivityDate, 'yyyy-MM-dd HH:mm:ss'),",
						"          LastEditDate = toDate(LastEditDate, 'yyyy-MM-dd HH:mm:ss'),",
						"          LastEditorUserId = toInteger(LastEditorUserId),",
						"          OwnerUserId = toInteger(OwnerUserId),",
						"          ParentId = toInteger(ParentId),",
						"          PostTypeId = toInteger(PostTypeId),",
						"          Score = toInteger(Score),",
						"          Tags = toString(Tags),",
						"          ViewCount = toInteger(ViewCount)) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     filePattern:'m_posts_200801.parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink2"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_target_parquet')]",
				"[concat(variables('factoryId'), '/datasets/ds_master_source_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlow_Posts2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_target_parquet",
								"type": "DatasetReference"
							},
							"name": "Posts2"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_master_source_parquet",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Id as string,",
						"          AcceptedAnswerId as string,",
						"          AnswerCount as string,",
						"          ClosedDate as string,",
						"          CommentCount as string,",
						"          CommunityOwnedDate as string,",
						"          CreationDate as string,",
						"          FavoriteCount as string,",
						"          LastActivityDate as string,",
						"          LastEditDate as string,",
						"          LastEditorUserId as string,",
						"          OwnerUserId as string,",
						"          ParentId as string,",
						"          PostTypeId as string,",
						"          Score as string,",
						"          Tags as string,",
						"          ViewCount as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> Posts2",
						"Posts2 derive(Id = toInteger(Id),",
						"          AcceptedAnswerId = toInteger(AcceptedAnswerId),",
						"          AnswerCount = toInteger(AnswerCount),",
						"          ClosedDate = toDate(ClosedDate, 'yyyy-MM-dd HH:mm:ss'),",
						"          CommentCount = toInteger(CommentCount),",
						"          CommunityOwnedDate = toDate(CommunityOwnedDate, 'yyyy-MM-dd HH:mm:ss'),",
						"          CreationDate = toDate(CreationDate, 'yyyy-MM-dd HH:mm:ss'),",
						"          FavoriteCount = toInteger(FavoriteCount),",
						"          LastActivityDate = toDate(LastActivityDate, 'yyyy-MM-dd HH:mm:ss'),",
						"          LastEditDate = toDate(LastEditDate, 'yyyy-MM-dd HH:mm:ss'),",
						"          LastEditorUserId = toInteger(LastEditorUserId),",
						"          OwnerUserId = toInteger(OwnerUserId),",
						"          ParentId = toInteger(ParentId),",
						"          PostTypeId = toInteger(PostTypeId),",
						"          Score = toInteger(Score),",
						"          Tags = toString(Tags),",
						"          ViewCount = toInteger(ViewCount)) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     filePattern:'m_posts_200901.parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink2"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_target_parquet')]",
				"[concat(variables('factoryId'), '/datasets/ds_master_source_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlow_Posttypes')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_target_parquet",
								"type": "DatasetReference"
							},
							"name": "Posttypes"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_master_source_parquet",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Id as string,",
						"          Type as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> Posttypes",
						"Posttypes derive(Id = toInteger(Id),",
						"          Type = toString(Type)) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     filePattern:'m_posttypes.parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink2"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_target_parquet')]",
				"[concat(variables('factoryId'), '/datasets/ds_master_source_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlow_Users')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_target_parquet",
								"type": "DatasetReference"
							},
							"name": "Users"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_master_source_parquet",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Id as string,",
						"          CreationDate as string,",
						"          DownVotes as string,",
						"          LastAccessDate as string,",
						"          Reputation as string,",
						"          UpVotes as string,",
						"          Views as string,",
						"          AccountId as string,",
						"          Email as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> Users",
						"Users derive(Id = toInteger(Id),",
						"          CreationDate = toDate(CreationDate, 'yyyy-MM-dd HH:mm:ss'),",
						"          DownVotes = toInteger(DownVotes),",
						"          LastAccessDate = toDate(LastAccessDate, 'yyyy-MM-dd HH:mm:ss'),",
						"          Reputation = toInteger(Reputation),",
						"          UpVotes = toInteger(UpVotes),",
						"          Views = toInteger(Views),",
						"          AccountId = toInteger(AccountId),",
						"          Email = toString(Email)) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     filePattern:'m_users.parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink2"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_target_parquet')]",
				"[concat(variables('factoryId'), '/datasets/ds_master_source_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlow_Votes')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_target_parquet",
								"type": "DatasetReference"
							},
							"name": "Votes"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_master_source_parquet",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Id as string,",
						"          PostId as string,",
						"          UserId as string,",
						"          BountyAmount as string,",
						"          VoteTypeId as string,",
						"          CreationDate as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> Votes",
						"Votes derive(Id = toInteger(Id),",
						"          PostId = toInteger(PostId),",
						"          UserId = toInteger(UserId),",
						"          BountyAmount = toInteger(BountyAmount),",
						"          VoteTypeId = toInteger(VoteTypeId),",
						"          CreationDate = toDate(CreationDate, 'yyyy-MM-dd HH:mm:ss')) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     filePattern:'m_votes.parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink2"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_target_parquet')]",
				"[concat(variables('factoryId'), '/datasets/ds_master_source_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlow_Votetypes')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_target_parquet",
								"type": "DatasetReference"
							},
							"name": "Votetypes"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_master_source_parquet",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Id as string,",
						"          Name as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> Votetypes",
						"Votetypes derive(Id = toInteger(Id),",
						"          Name = toString(Name)) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     filePattern:'m_votetypes.parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink2"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_target_parquet')]",
				"[concat(variables('factoryId'), '/datasets/ds_master_source_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_target_parquet",
								"type": "DatasetReference"
							},
							"name": "RawUsers"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_master_source_parquet",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Id as string,",
						"          CreationDate as string,",
						"          DownVotes as string,",
						"          LastAccessDate as string,",
						"          Reputation as string,",
						"          UpVotes as string,",
						"          Views as string,",
						"          AccountId as string,",
						"          Email as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> RawUsers",
						"RawUsers select(mapColumn(",
						"          Id,",
						"          DownVotes,",
						"          LastAccessDate,",
						"          Reputation,",
						"          UpVotes,",
						"          Views,",
						"          AccountId",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(Valoracion = toInteger(Reputation) + 100) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     filePattern:'m_users[n].parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_target_parquet')]",
				"[concat(variables('factoryId'), '/datasets/ds_master_source_parquet')]"
			]
		}
	]
}