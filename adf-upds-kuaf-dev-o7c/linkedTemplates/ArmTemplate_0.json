{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-upds-kuaf-dev-o7c"
		},
		"ADLSLinkedService_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ADLSLinkedService'"
		},
		"FileLinkedService_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'FileLinkedService'"
		},
		"ADLSLinkedService_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dlsupdskuafdevi5l.dfs.core.windows.net/"
		},
		"FileLinkedService_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "\\\\DESKTOP-RBFTL9T\\D$\\data"
		},
		"FileLinkedService_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "MicrosoftAccount\\KEVIN"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/business_student_overview')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Demo",
						"description": "Demo",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "demo",
							"value": "demo"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"demo": {
						"type": "String"
					}
				},
				"folder": {
					"name": "03_business_reports"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-14T00:52:17Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/raw_ga4_core')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Demo",
						"description": "Demo",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "demo",
							"value": "demo"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"demo": {
						"type": "String"
					}
				},
				"folder": {
					"name": "01_raw_source"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-14T00:52:17Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLSLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ADLSLinkedService_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ADLSLinkedService_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/IRKUAFLocal01')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_master_source_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string",
						"defaultValue": "m_comments1.parquet"
					},
					"appname": {
						"type": "string",
						"defaultValue": "m_sharedknow"
					},
					"objectname": {
						"type": "string",
						"defaultValue": "m_comments"
					}
				},
				"folder": {
					"name": "TrabajoIndividual"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(dataset().appname,'/',dataset().objectname,'/',dataset().filename)",
							"type": "Expression"
						},
						"folderPath": "data",
						"fileSystem": "master"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_master_trabajofinalparquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					},
					"appname": {
						"type": "string"
					}
				},
				"folder": {
					"name": "TrabajoFinal"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().appname",
							"type": "Expression"
						},
						"fileSystem": "master"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "Id",
						"type": "INT32"
					},
					{
						"name": "Name",
						"type": "UTF8"
					},
					{
						"name": "UserId",
						"type": "INT32"
					},
					{
						"name": "Date",
						"type": "DATE"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_target_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string",
						"defaultValue": "badges.parquet"
					},
					"appname": {
						"type": "string",
						"defaultValue": "sharedknow"
					},
					"objectname": {
						"type": "string",
						"defaultValue": "badges"
					}
				},
				"folder": {
					"name": "TrabajoIndividual"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(dataset().appname,'/',dataset().objectname,'/',dataset().filename)",
							"type": "Expression"
						},
						"folderPath": "data",
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_target_trabajofinalparquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					},
					"appname": {
						"type": "string"
					}
				},
				"folder": {
					"name": "TrabajoFinal"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().appname",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "Id",
						"type": "UTF8"
					},
					{
						"name": "Name",
						"type": "UTF8"
					},
					{
						"name": "UserId",
						"type": "UTF8"
					},
					{
						"name": "Date",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FileLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('FileLinkedService_properties_typeProperties_host')]",
					"userId": "[parameters('FileLinkedService_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('FileLinkedService_password')]"
					}
				},
				"connectVia": {
					"referenceName": "IRKUAFLocal01",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/IRKUAFLocal01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_source_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FileLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					},
					"appname": {
						"type": "string"
					},
					"objectname": {
						"type": "string"
					}
				},
				"folder": {
					"name": "TrabajoIndividual"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": {
							"value": "@concat(dataset().objectname,'/',dataset().filename)",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().appname",
							"type": "Expression"
						}
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FileLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_source_trabajofinal')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FileLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"appname": {
						"type": "string",
						"defaultValue": "TrabajoFinal"
					},
					"filename": {
						"type": "string",
						"defaultValue": "Geologia2.csv"
					}
				},
				"folder": {
					"name": "TrabajoFinal"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().appname",
							"type": "Expression"
						}
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "\"Id\"|\"Name\"|\"UserId\"|\"Date\"",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FileLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_Geologia')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "TrabajoFinal"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_target_trabajofinalparquet",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_master_trabajofinalparquet",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Estimacion as string,",
						"          Estatus as string,",
						"          Nombre_de_Estructura as string,",
						"          Full_Year_Budget as string,",
						"          Budget_YTD_April as string,",
						"          Actual_YTD_April as string,",
						"          Detalle as string,",
						"          Observacion as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> source1",
						"source1 derive(Estimacion = toString(Estimacion),",
						"          Estatus = toString(Estatus),",
						"          Nombre_de_Estructura = toString(Nombre_de_Estructura),",
						"          Full_Year_Budget = toDouble(Full_Year_Budget),",
						"          Budget_YTD_April = toDouble(Budget_YTD_April),",
						"          Actual_YTD_April = toDouble(Actual_YTD_April),",
						"          Detalle = toString(Detalle),",
						"          Observacion = toString(Observacion),",
						"          ActualVSFullYearBudget = toDouble(Actual_YTD_April)-toDouble(Full_Year_Budget),",
						"          ActualVSBudgetApril = toDouble(Actual_YTD_April)-toDouble(Budget_YTD_April),",
						"          Area = \"Geologia\") ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Id as integer,",
						"          Name as string,",
						"          UserId as integer,",
						"          Date as date",
						"     ),",
						"     format: 'parquet',",
						"     filePattern:'m_geologia[n].parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_target_trabajofinalparquet')]",
				"[concat(variables('factoryId'), '/datasets/ds_master_trabajofinalparquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_Geomecanica')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "TrabajoFinal"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_target_trabajofinalparquet",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_master_trabajofinalparquet",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Estimacion as string,",
						"          Estatus as string,",
						"          Nombre_de_Estructura as string,",
						"          Full_Year_Budget as string,",
						"          Budget_YTD_April as string,",
						"          Actual_YTD_April as string,",
						"          Detalle as string,",
						"          Observacion as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> source1",
						"source1 derive(Estimacion = toString(Estimacion),",
						"          Estatus = toString(Estatus),",
						"          Nombre_de_Estructura = toString(Nombre_de_Estructura),",
						"          Full_Year_Budget = toDouble(Full_Year_Budget),",
						"          Budget_YTD_April = toDouble(Budget_YTD_April),",
						"          Actual_YTD_April = toDouble(Actual_YTD_April),",
						"          Detalle = toString(Detalle),",
						"          Observacion = toString(Observacion),",
						"          ActualVSFullYearBudget = toDouble(Actual_YTD_April)-toDouble(Full_Year_Budget),",
						"          ActualVSBudgetApril = toDouble(Actual_YTD_April)-toDouble(Budget_YTD_April),",
						"          Area = \"Geomecanica\") ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Id as integer,",
						"          Name as string,",
						"          UserId as integer,",
						"          Date as date",
						"     ),",
						"     format: 'parquet',",
						"     filePattern:'m_geomecanica[n].parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_target_trabajofinalparquet')]",
				"[concat(variables('factoryId'), '/datasets/ds_master_trabajofinalparquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_Oportunidades')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "TrabajoFinal"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_target_trabajofinalparquet",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_master_trabajofinalparquet",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Estimacion as string,",
						"          Estatus as string,",
						"          Nombre_de_Estructura as string,",
						"          Full_Year_Budget as string,",
						"          Budget_YTD_April as string,",
						"          Actual_YTD_April as string,",
						"          Detalle as string,",
						"          Observacion as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> source1",
						"source1 derive(Estimacion = toString(Estimacion),",
						"          Estatus = toString(Estatus),",
						"          Nombre_de_Estructura = toString(Nombre_de_Estructura),",
						"          Full_Year_Budget = toDouble(Full_Year_Budget),",
						"          Budget_YTD_April = toDouble(Budget_YTD_April),",
						"          Actual_YTD_April = toDouble(Actual_YTD_April),",
						"          Detalle = toString(Detalle),",
						"          Observacion = toString(Observacion),",
						"          ActualVSFullYearBudget = toDouble(Actual_YTD_April)-toDouble(Full_Year_Budget),",
						"          ActualVSBudgetApril = toDouble(Actual_YTD_April)-toDouble(Budget_YTD_April),",
						"          Area = \"Oportunidades\") ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Id as integer,",
						"          Name as string,",
						"          UserId as integer,",
						"          Date as date",
						"     ),",
						"     format: 'parquet',",
						"     filePattern:'m_oportunidades[n].parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_target_trabajofinalparquet')]",
				"[concat(variables('factoryId'), '/datasets/ds_master_trabajofinalparquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_Planeamiento')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "TrabajoFinal"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_target_trabajofinalparquet",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_master_trabajofinalparquet",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Estimacion as string,",
						"          Estatus as string,",
						"          Nombre_de_Estructura as string,",
						"          Full_Year_Budget as string,",
						"          Budget_YTD_April as string,",
						"          Actual_YTD_April as string,",
						"          Detalle as string,",
						"          Observacion as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> source1",
						"source1 derive(Estimacion = toString(Estimacion),",
						"          Estatus = toString(Estatus),",
						"          Nombre_de_Estructura = toString(Nombre_de_Estructura),",
						"          Full_Year_Budget = toDouble(Full_Year_Budget),",
						"          Budget_YTD_April = toDouble(Budget_YTD_April),",
						"          Actual_YTD_April = toDouble(Actual_YTD_April),",
						"          Detalle = toString(Detalle),",
						"          Observacion = toString(Observacion),",
						"          ActualVSFullYearBudget = toDouble(Actual_YTD_April)-toDouble(Full_Year_Budget),",
						"          ActualVSBudgetApril = toDouble(Actual_YTD_April)-toDouble(Budget_YTD_April),",
						"          Area = \"Planeamiento\") ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Id as integer,",
						"          Name as string,",
						"          UserId as integer,",
						"          Date as date",
						"     ),",
						"     format: 'parquet',",
						"     filePattern:'m_planeamiento[n].parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_target_trabajofinalparquet')]",
				"[concat(variables('factoryId'), '/datasets/ds_master_trabajofinalparquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_Retrasos_Operativos')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "TrabajoFinal"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_target_trabajofinalparquet",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_master_trabajofinalparquet",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Estimacion as string,",
						"          Estatus as string,",
						"          Nombre_de_Estructura as string,",
						"          Full_Year_Budget as string,",
						"          Budget_YTD_April as string,",
						"          Actual_YTD_April as string,",
						"          Detalle as string,",
						"          Observacion as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> source1",
						"source1 derive(Estimacion = toString(Estimacion),",
						"          Estatus = toString(Estatus),",
						"          Nombre_de_Estructura = toString(Nombre_de_Estructura),",
						"          Full_Year_Budget = toDouble(Full_Year_Budget),",
						"          Budget_YTD_April = toDouble(Budget_YTD_April),",
						"          Actual_YTD_April = toDouble(Actual_YTD_April),",
						"          Detalle = toString(Detalle),",
						"          Observacion = toString(Observacion),",
						"          ActualVSFullYearBudget = toDouble(Actual_YTD_April)-toDouble(Full_Year_Budget),",
						"          ActualVSBudgetApril = toDouble(Actual_YTD_April)-toDouble(Budget_YTD_April),",
						"          Area = \"Retrasos Operativos\") ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Id as integer,",
						"          Name as string,",
						"          UserId as integer,",
						"          Date as date",
						"     ),",
						"     format: 'parquet',",
						"     filePattern:'m_retrasos_operativos[n].parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_target_trabajofinalparquet')]",
				"[concat(variables('factoryId'), '/datasets/ds_master_trabajofinalparquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlow_Badges')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "TrabajoIndividual"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_target_parquet",
								"type": "DatasetReference"
							},
							"name": "Badges"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_master_source_parquet",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Id as string,",
						"          Name as string,",
						"          UserId as string,",
						"          Date as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> Badges",
						"Badges derive(Id = toString(Id),",
						"          UserId = toString(UserId),",
						"          Name = toString(Name),",
						"          Date = toTimestamp(Date,'yyyy-MM-dd HH:mm:ss')) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     filePattern:'m_badges.parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink2"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_target_parquet')]",
				"[concat(variables('factoryId'), '/datasets/ds_master_source_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlow_Comments')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "TrabajoIndividual"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_target_parquet",
								"type": "DatasetReference"
							},
							"name": "Comments"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_master_source_parquet",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Id as string,",
						"          CreationDate as string,",
						"          PostId as string,",
						"          Score as string,",
						"          UserId as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> Comments",
						"Comments derive(Id = toString(Id),",
						"          CreationDate = toTimestamp(CreationDate,'yyyy-MM-dd HH:mm:ss'),",
						"          PostId = toString(PostId),",
						"          Score = toInteger(Score),",
						"          UserId = toString(UserId)) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     filePattern:'m_comments.parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink2"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_target_parquet')]",
				"[concat(variables('factoryId'), '/datasets/ds_master_source_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlow_Linktypes')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "TrabajoIndividual"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_target_parquet",
								"type": "DatasetReference"
							},
							"name": "Linktypes"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_master_source_parquet",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Id as string,",
						"          Type as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> Linktypes",
						"Linktypes derive(Id = toString(Id),",
						"          Type = toString(Type)) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     filePattern:'m_linktypes.parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink2"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_target_parquet')]",
				"[concat(variables('factoryId'), '/datasets/ds_master_source_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlow_Postlinks')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "TrabajoIndividual"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_target_parquet",
								"type": "DatasetReference"
							},
							"name": "Postlinks"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_master_source_parquet",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Id as string,",
						"          CreationDate as string,",
						"          PostId as string,",
						"          RelatedPostId as string,",
						"          LinkTypeId as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> Postlinks",
						"Postlinks derive(Id = toString(Id),",
						"          CreationDate = toTimestamp(CreationDate,'yyyy-MM-dd HH:mm:ss'),",
						"          PostId = toString(PostId),",
						"          RelatedPostId = toString(RelatedPostId),",
						"          LinkTypeId = toString(LinkTypeId)) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     filePattern:'m_postlinks.parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink2"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_target_parquet')]",
				"[concat(variables('factoryId'), '/datasets/ds_master_source_parquet')]"
			]
		}
	]
}